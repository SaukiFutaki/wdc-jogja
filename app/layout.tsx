/* eslint-disable @typescript-eslint/no-explicit-any */
import Navbar from "@/components/navbar/navbar";
import { ThemeProvider } from "@/components/providers/theme-provider";
import { Toaster } from "@/components/ui/toaster";
import { getCartItems } from "@/lib/actions/cart";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import Script from "next/script";
import NextTopLoader from "nextjs-toploader";
import "./globals.css";
import { getUserNotifications } from "@/lib/actions/notification";
import { Notification } from "@/components/notif-ex";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cartItems = await getCartItems();
  const cartCount = cartItems.totalItems;
  const cartData = {
    items: cartItems?.items
      ? cartItems.items.map((item: any) => ({
          ...item,
          product: {
            ...item.product,
            price: item.product.price ?? 0, // Ensure price is not null
          },
        }))
      : [], // Ensure items is an empty array if cartItems.items is null/undefined
    cartTotal: cartItems?.cartTotal ?? 0, // Ensure cartTotal is not null
  };

  const notif = await getUserNotifications();
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <Script
          src="https://app.sandbox.midtrans.com/snap/snap.js"
          data-client-key={process.env.MIDTRANS_CLIENT_KEY}
          strategy="beforeInteractive"
        />
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          {" "}
          <NextTopLoader
            color="#22c55e"
            initialPosition={0.08}
            crawlSpeed={200}
            height={3}
            crawl={true}
            showSpinner={true}
            easing="ease"
            speed={200}
            shadow="0 0 10px #2299DD,0 0 5px #22c55e"
            zIndex={999}
            showAtBottom={false}
          />
          <Toaster />
          {/* <Header cartCount={cartCount} cartData={cartData} /> */}
          <Navbar cartCount={cartCount} cartData={cartData} notifications={notif.notifications as unknown as Notification[]} />
          <div className="">{children}</div>
        </ThemeProvider>
      </body>
    </html>
  );
}
